@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav" style="display: flex; flex-direction: row; gap: 10px;">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
            <a id="manage" class="btn btn-outline-light me-2" style="display: flex; justify-content: center; align-items: center;" 
            asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="btn btn-warning" style="display: flex; justify-content: center; align-items: center;">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
            <a class="btn btn-outline-light me-2" style="display: flex; justify-content: center; align-items: center;"  id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
    <li class="nav-item">
            <a class="btn btn-warning" style="display: flex; justify-content: center; align-items: center;"  id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
}
</ul>
